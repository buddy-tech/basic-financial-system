<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="logoBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        8gv5QnzMAAAAAElFTkSuQmCC
</value>
  </data>
</root>